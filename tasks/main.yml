---
- name: debug
  debug:
    msg: "Jeste kubernetese"

- name: update facts
  setup:

- name: set default flags
  set_fact:
    _kubernetes_cluster_exists: false
- block:
    - include_tasks: consul_discovery.yml

    - block:
        - include_tasks: "install.yml"
        # if node token exists, the node is part of a cluster
        - name: look for node-token
          stat:
            path: /var/lib/rancher/rke2/server/node-token
          register: _node_token_stat

        - block:
            - name: start existing cluster
              service:
                name: rke2-server
                state: started

            - include_tasks: wait_for_node.yml

            - name: set flag about existing cluster
              set_fact:
                _kubernetes_cluster_exists: true
              run_once: true

          when: _node_token_stat.stat.exists

        - include_tasks: "configure.yml"  # bootstrap
          when: not _kubernetes_cluster_exists and app.value.kubernetes.configs.type == "master"
          run_once: true

        - include_tasks: "configure.yml"  # configure rest of nodes

        - include_tasks: config_cluster.yml
          when: app.value.kubernetes.configs.type == "master"
          run_once: true

      when: app.value.kubernetes.configs.type in  ["master", "worker"]

    - include_tasks: "apps.yml"
      when: app.value.kubernetes.configs.type == "apps"
      run_once: true

    - include_tasks: "apps_all_nodes.yml"

  become: true
  become_user: root

- name: flush handlers
  meta: flush_handlers

- name: wait for ingress to start
  vars:
    _kube_master: "{{ hostvars|dict2items|get_kubernetes_master(app.value.kubernetes.configs.cluster_name) }}"
  community.kubernetes.k8s_info:
    kind: Pod
    namespace: kube-system
    label_selectors:
      - "app.kubernetes.io/name=rke2-ingress-nginx"
    kubeconfig: "{{ _kube_master['kubernetes']['info']['kubeconfig'] }}"
  delegate_to: "{{ _kubernetes_nodes.stdout_lines[0] }}"
  register: _ingress_pods
  when: app.value.kubernetes.configs.type == "worker"
  until: _ingress_pods['resources'][0]['status']['containerStatuses'][0]['ready'] | default(false)
  retries: 300
  delay: 10
  become: true
  become_user: root
